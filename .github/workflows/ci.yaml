name: Go Deployment CI

on:
  push:
    branches:
      - master
    # Not efficient to build both if one is changed however this will do for now
    paths:
      - 'sources/fastapi-webapp/**'
      - 'sources/go-webapp/**'

env:
  DOCKER_FASTAPI_REPO: fastapi-argocd-workshop
  DOCKER_GO_REPO: go-argocd-workshop
  CI_COMMIT_MESSAGE: "[ci-auto-commit] Continuous Integration: Manifests generated and updated."
  CI_COMMIT_AUTHOR: GitHub Workflows

jobs:
  build-fastapi:
    name: Build the fastapi webapp container image
    if: |
      !startsWith(github.event.head_commit.message, '[ci-auto-commit] ') &&
      github.event.head_commit.author.username != 'GitHub Workflows'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      
      # These build/push steps are just simplifications since image promotion is not point of this workshop
      - name: Build and push fastapi webapp
        id: docker_build_fastapi
        uses: docker/build-push-action@v4
        with:
          platforms: linux/amd64,linux/arm64,linux/arm64/v8
          context: ./sources/fastapi-webapp
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_FASTAPI_REPO }}:latest
            ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_FASTAPI_REPO }}:dev-${{ github.sha }}
            ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_FASTAPI_REPO }}:prod-${{ github.sha }}

      - name: Image digest
        run: echo ${{ steps.docker_build_fastapi.outputs.digest }}

  build-go:
    name: Build the go webapp container image
    if: |
      !startsWith(github.event.head_commit.message, '[ci-auto-commit] ') &&
      github.event.head_commit.author.username != 'GitHub Workflows'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      # These build/push steps are just simplifications since image promotion is not point of this workshop
      - name: Build and push go webapp
        id: docker_build_go
        uses: docker/build-push-action@v4
        with:
          platforms: linux/amd64,linux/arm64,linux/arm64/v8
          context: ./sources/go-webapp
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_GO_REPO }}:latest
            ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_GO_REPO }}:dev-${{ github.sha }}
            ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_GO_REPO }}:prod-${{ github.sha }}

      - name: Image digest
        run: echo ${{ steps.docker_build_go.outputs.digest }}
  
  update-manifests:
    name: Update the kubernetes manifests
    runs-on: ubuntu-latest
    needs:
      - build-fastapi
      - build-go
    if: |
      !startsWith(github.event.head_commit.message, '[ci-auto-commit] ') &&
      github.event.head_commit.author.username != 'GitHub Workflows'
    continue-on-error: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GIT_WORKFLOWS_TOKEN }}

      - name: Install kustomize
        run: |
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          sudo mv kustomize /usr/local/bin

      # This step is very important for the CD part of the pipeline.
      # The generated manifests in the step(Generate and update manifests) are for any user to take a quick look on the manifests built by Kustomize and are being applied.
      # However ArgoCD is pointing towards the particular overlay with a kustomize.yaml file to generate and apply the manifests immediately.
      # Put simply it is the overlay that will be the source of the apply (kubectl apply -k overlay/dev) NOT (kubectl apply -f gitops/kustomized-output/manifests.yaml)
      - name: Update the patch with the approperiate tag name for ArgoCD
        run: |
          sed -i 's|image: ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_FASTAPI_REPO }}:.*|image: ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_FASTAPI_REPO }}:dev-${{ github.sha }}|' gitops/components/fastapi-webapp/overlays/dev/patches/app-deployment-patch.yaml
          sed -i 's|image: ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_FASTAPI_REPO }}:.*|image: ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_FASTAPI_REPO }}:prod-${{ github.sha }}|' gitops/components/fastapi-webapp/overlays/prod/patches/app-deployment-patch.yaml
          sed -i 's|image: ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_GO_REPO }}:.*|image: ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_GO_REPO }}:dev-${{ github.sha }}|' gitops/components/go-webapp/overlays/dev/patches/app-deployment-patch.yaml
          sed -i 's|image: ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_GO_REPO }}:.*|image: ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_GO_REPO }}:prod-${{ github.sha }}|' gitops/components/go-webapp/overlays/prod/patches/app-deployment-patch.yaml

      - name: Generate and update manifests
        run: |
          kustomize build gitops/components/fastapi-webapp/overlays/dev > gitops/kustomized-output/fastapi-dev-manifests.yaml
          kustomize build gitops/components/fastapi-webapp/overlays/prod > gitops/kustomized-output/fastapi-prod-manifests.yaml
          kustomize build gitops/components/go-webapp/overlays/dev > gitops/kustomized-output/go-dev-manifests.yaml
          kustomize build gitops/components/go-webapp/overlays/prod > gitops/kustomized-output/go-prod-manifests.yaml
          sed -i '1s/^/# git commit: ${{ github.sha }}\n/' gitops/kustomized-output/fastapi-dev-manifests.yaml
          sed -i '1s/^/# git commit: ${{ github.sha }}\n/' gitops/kustomized-output/fastapi-prod-manifests.yaml
          sed -i '1s/^/# git commit: ${{ github.sha }}\n/' gitops/kustomized-output/go-dev-manifests.yaml
          sed -i '1s/^/# git commit: ${{ github.sha }}\n/' gitops/kustomized-output/go-prod-manifests.yaml

      - name: Git setup, add, commit, and push
        run: |
          git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
          git config --global user.email "${{ secrets.GIT_EMAIL }}"
          git add gitops/kustomized-output/fastapi-dev-manifests.yaml
          git add gitops/kustomized-output/fastapi-prod-manifests.yaml
          git add gitops/kustomized-output/go-dev-manifests.yaml
          git add gitops/kustomized-output/go-prod-manifests.yaml
          git add gitops/components/fastapi-webapp/overlays/dev/patches/app-deployment-patch.yaml
          git add gitops/components/fastapi-webapp/overlays/prod/patches/app-deployment-patch.yaml
          git add gitops/components/go-webapp/overlays/dev/patches/app-deployment-patch.yaml
          git add gitops/components/go-webapp/overlays/prod/patches/app-deployment-patch.yaml
          git commit -m "${{ env.CI_COMMIT_MESSAGE }}"
          git push
